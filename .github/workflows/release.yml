name: Release

on:
  push:
    branches: [ main, release/* ]
env:
  SLACK_CHANNEL: wecrm
  SLACK_USERNAME: WeOS CRM API
  SLACK_ICON: https://github.com/wepala.png?size=48
  SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
  SLACK_FOOTER: copyright 2021 Wepala
  AWS_DEFAULT_REGION: us-east-1
  AWS_REGION: us-east-1
  AWS_DEFAULT_OUTPUT: json
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGISTRY_URL: ${{ secrets.DOCKER_REGISTRY_URL }}
  AWS_CLUSTER_NAME: ${{ secrets.AWS_CLUSTER_ARN }}
  AWS_ROLE: ${{ secrets.AWS_ROLE }}
jobs:

  build:
    runs-on: ubuntu-latest
    environment: staging
    steps:
    - uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.16

    - name: Build
      run: go build -v ./...

    - name: Test
      run: go test -v ./...
    - name: Setup build variables
      id: setup
      run: |
        TICKET=$(echo ${GITHUB_REF} | sed -e "s/refs\/heads\///g" | sed -e "s/feature\///g")
        echo "::set-output name=today::$(date +'%Y%m%d%H')"
        echo "::set-output name=ticket::${TICKET}"
    - name: Create build
      run: |
        env GOOS=linux GARCH=amd64 CGO_ENABLED=0 go build -o blog-aggregator -tags server
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
        role-to-assume: ${{ env.AWS_ROLE }}
        role-duration-seconds: 1200
        role-session-name: blogaggergator${{ github.sha }}
        role-skip-session-tagging: true
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
    - name: Build and tag the image
      run: |
        docker build \
          -t ${AWS_REGISTRY_URL}:${{ github.sha }} \
          -t ${AWS_REGISTRY_URL}:${{ steps.setup.outputs.ticket }} \
          --target app .
    - name: Push to ECR
      run: |
        docker push ${AWS_REGISTRY_URL}:${{ github.sha }}
        docker push ${AWS_REGISTRY_URL}:${{ steps.setup.outputs.ticket }}
    - name: Update ECS service
      run: |
        aws ecs update-service --service blogs${{ steps.setup.outputs.ticket }}-service --cluster ${AWS_CLUSTER_NAME} --force-new-deployment
    - uses: crazy-max/ghaction-xgo@v1
      name: build linux and mac
      with:
        xgo_version: latest
        go_version: 1.16.x
        dest: build
        prefix: blog-aggregator
        targets: linux/386,linux/amd64,darwin/amd64,windows/386,windows/amd64
        v: true
        x: false
        race: false
        ldflags: -s -w
        buildmode: default
    - name: setup mac build
      run: |
        mkdir -p build/mac
        cp LICENSE build/mac/LICENSE
        cp NOTICE build/mac/NOTICE
        cp README.md build/mac/README.md
        cp api.yaml build/mac/api.yaml
        cp build/blog-aggregator-darwin-10.12-amd64 build/mac/blog-aggregator
        chmod +x build/mac/blog-aggregator
        tar -czf blog-aggregator-mac-amd64.tar.gz -C build/mac .
    - uses: actions/upload-artifact@v2
      with:
        name: Mac OS
        path: blog-aggregator-mac-amd64.tar.gz
    - name: setup windows builds
      run: |
        #setup windows 32 bit build
        mkdir -p build/win32
        cp api.yaml build/win32/api.yaml
        cp LICENSE build/win32/LICENSE
        cp NOTICE build/win32/NOTICE
        cp README.md build/win32/README.md
        cp build/blog-aggregator-windows-4.0-386.exe build/win32/blog-aggregator.exe
        chmod +x build/win32/blog-aggregator.exe
        cd build/win32
        zip -r  ../../blog-aggregator-win32.zip .
        cd ../../

        #setup windows 64 bit build
        mkdir -p build/win64/apps/admin
        cp api.yaml build/win64/api.yaml
        cp LICENSE build/win64/LICENSE
        cp NOTICE build/win64/NOTICE
        cp README.md build/win64/README.md
        cp build/blog-aggregator-windows-4.0-amd64.exe build/win64/blog-aggregator.exe
        chmod +x build/win64/blog-aggregator.exe
        cd build/win64
        zip -r  ../../blog-aggregator-win64.zip .
    - uses: actions/upload-artifact@v2
      with:
        name: Windows 32 Bit
        path: blog-aggregator-win32.zip
    - uses: actions/upload-artifact@v2
      with:
        name: Windows 64 bit
        path: blog-aggregator-win64.zip
    - name: setup linux builds
      run: |
        #setup linux 32 bit build
          mkdir -p build/linux32
          cp api.yaml build/linux32/api.yaml
          cp LICENSE build/linux32/LICENSE
          cp NOTICE build/linux32/NOTICE
          cp README.md build/linux32/README.md
          cp build/blog-aggregator-linux-386 build/linux32/blog-aggregator
          chmod +x build/linux32/blog-aggregator
          tar -czf blog-aggregator-linux-386.tar.gz -C build/linux32 .

          #setup linux 64 bit build
          mkdir -p build/linux64
          cp api.yaml build/linux64/api.yaml
          cp LICENSE build/linux64/LICENSE
          cp NOTICE build/linux64/NOTICE
          cp build/blog-aggregator-linux-amd64 build/linux64/blog-aggregator
          chmod +x build/linux64/blog-aggregator
          tar -czf blog-aggregator-linux-amd64.tar.gz -C build/linux64 .
    - uses: actions/upload-artifact@v2
      with:
        name: Linux 32 Bit
        path: blog-aggregator-linux-386.tar.gz
    - uses: actions/upload-artifact@v2
      with:
        name: Linux 64 Bit
        path: blog-aggregator-linux-amd64.tar.gz
